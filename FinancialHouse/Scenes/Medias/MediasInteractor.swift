//
//  MediasInteractor.swift
//  FinancialHouse
//
//  Created by Olgu on 17.10.2020.
//  Copyright (c) 2020 ___ORGANIZATIONNAME___. All rights reserved.
//
//  This file was generated by the Clean Swift Xcode Templates so
//  you can apply clean architecture to your iOS and Mac projects,
//  see http://clean-swift.com
//

import UIKit

protocol MediasBusinessLogic {
    func fetchMedias(request: Medias.FetchMedias.Request)
}

protocol MediasDataStore {
    var items: [ItunesItem]? { get }
}

final class MediasInteractor: MediasBusinessLogic, MediasDataStore {
    var presenter: MediasPresentationLogic?
    var worker: MediasWorker?
    var items: [ItunesItem]?

    private let validator = ThrottledTextValidator()

    // MARK: Do something

    func fetchMedias(request: Medias.FetchMedias.Request) {
        
        worker = MediasWorker(ordersStore: ItunesNetworkManager())

        validator.validate(query: request.term) { [weak self] query in
            guard let query = query, !query.isEmpty else { return }
            self?.startFetching(with: request)
        }
    }
    
    private func startFetching(with request: Medias.FetchMedias.Request) {
        worker?.fetchMedias(request: request, completionHandler: { [weak self] (itunesMainData, error) in
            if let itunesMainData = itunesMainData {
                self?.handleResponse(itunesMainData: itunesMainData)
            }
        })
    }
    
    private func handleResponse(itunesMainData: ItunesMainData) {
        self.items = itunesMainData.results
        let response = Medias.FetchMedias.Response(items: itunesMainData.results)
        self.presenter?.presentMedia(response: response)
    }
}
